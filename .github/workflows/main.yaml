name: CI/CD Pipeline for Python Flask App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests targeting the main branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest # The type of runner that the job will run on

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 # Action to checkout your repository code
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests (placeholder)
        run: |
          # Here you would typically run your unit tests, integration tests, etc.
          # For now, let's just create a dummy test file and run it.
          echo "import unittest" > test_app.py
          echo "from main import app" >> test_app.py
          echo "class TestApp(unittest.TestCase):" >> test_app.py
          echo "    def test_hello_route(self):" >> test_app.py
          echo "        tester = app.test_client(self)" >> test_app.py
          echo "        response = tester.get('/')" >> test_app.py
          echo "        self.assertEqual(response.status_code, 200)" >> test_app.py
          echo "        self.assertIn(b'Hello from Flask!', response.data)" >> test_app.py
          echo "if __name__ == '__main__':" >> test_app.py
          echo "    unittest.main()" >> test_app.py
          python -m unittest test_app.py
          echo "Tests passed successfully!"

      - name: Build and Push Docker Image
        run: docker build . -t ashishpandey2014/kraken:latest
      - name: Login to Docker Hub
        run: docker login -u ashishpandey2014 -p ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: push image
        run: docker push ashishpandey2014/kraken:latest